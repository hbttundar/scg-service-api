# Options for analysis running
run:
  # Timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # Include test files or not, default is true
  tests: true

  # Default concurrency is a available CPU number
  concurrency: 4

  # Allow multiple parallel golangci-lint instances running
  allow-parallel-runners: true

  # Allow issues about generated files
  allow-serial-runners: false

# Output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  formats:
    - colored-line-number

  # Print lines of code with issue, default is true
  print-issued-lines: true

  # Print linter name in the end of issue text, default is true
  print-linter-name: true

# All available settings of specific linters
linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    check-type-assertions: true

  govet:
    # Enable all analyzers
    enable-all: true
    # Disable specific analyzers
    disable:
      - fieldalignment # Too strict for most code

  gocyclo:
    # Minimal code complexity to report, 30 by default
    min-complexity: 15

  dupl:
    # Tokens count to trigger issue, 150 by default
    threshold: 100

  goconst:
    # Minimal length of string constant, 3 by default
    min-len: 3
    # Minimal occurrences count to trigger, 3 by default
    min-occurrences: 3

  misspell:
    # Correct spellings using locale preferences for US or UK.
    locale: US

  lll:
    # Max line length, lines longer will be reported. Default is 120.
    line-length: 120

  unused:
    # Treat code as a program (not a library) and report unused exported identifiers
    check-exported: false

  unparam:
    # Inspect exported functions, default is false
    check-exported: false

  revive:
    # Minimal confidence for issues, default is 0.8
    min-confidence: 0.8
    rules:
      - name: exported
        severity: warning
        disabled: false
      - name: var-naming
        severity: warning
        disabled: false

  gocritic:
    # Enable specific checkers
    enabled-checks:
      - appendAssign
      - appendCombine
      - assignOp
      - captLocal
      - caseOrder
      - defaultCaseOrder
      - dupBranchBody
      - dupSubExpr
      - elseif
      - emptyFallthrough
      - emptyStringTest
      - exitAfterDefer
      - flagDeref
      - ifElseChain
      - regexpMust
      - sloppyLen
      - switchTrue
      - typeSwitchVar
      - underef
      - unlambda
      - unslice

  wsl:
    # Allow cuddling assignments
    allow-assign-and-call: true
    # Allow cases to be cuddled
    allow-cuddle-declarations: false
    # Force short declarations to be cuddled
    force-short-decl-cuddling: false

# Enable specific linters
linters:
  enable:
    - errcheck     # Detect unchecked errors
    - gosimple     # Simplify code
    - govet        # Examine Go source code and reports suspicious constructs
    - ineffassign  # Detect when assignments to existing variables are not used
    - staticcheck  # Go static analysis
    - typecheck    # Like the front-end of a Go compiler
    - unused       # Check for unused constants, variables, functions and types
    - gosec        # Inspects source code for security problems
    - gocyclo      # Calculate cyclomatic complexity of functions
    - dupl         # Tool for code clone detection
    - goconst      # Find repeated strings that could be replaced by a constant
    - goimports    # Check import statements are formatted according to the 'goimport' command
    - misspell     # Finds commonly misspelled English words in comments
    - lll          # Reports long lines
    - prealloc     # Finds slice declarations that could potentially be pre-allocated
    - unconvert    # Remove unnecessary type conversions
    - unparam      # Reports unused function parameters
    - nakedret     # Finds naked returns in functions greater than a specified function length
    - revive       # Fast, configurable, extensible, flexible, and beautiful linter for Go
    - gocritic     # Provides diagnostics that check for bugs, performance and style issues
    - bodyclose    # Checks whether HTTP response body is closed successfully
    - wsl          # Whitespace Linter - Forces you to use empty lines
    - godot        # Check if comments end in a period
    - dogsled      # Checks for too many blank identifiers in variable assignments
    - copyloopvar  # Checks for pointers to enclosing loop variables
    - gochecknoinits # Check that no init functions are present
    - gocognit     # Computes and checks the cognitive complexity of functions
    - goprintffuncname # Checks that printf-like functions are named with f at the end
    - nolintlint   # Reports ill-formed or insufficient nolint directives
    - shadow       # Check for shadowed variables

issues:
  # Maximum count of issues with the same text
  max-same-issues: 3

  # Maximum issues count per one linter
  max-issues-per-linter: 50

  # Exclude directories from linting
  exclude-dirs:
    - vendor

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - dupl
        - gosec
        - lll
